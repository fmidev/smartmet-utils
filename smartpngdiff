#!/bin/sh
#
# pngdiff.sh <ok_png> <png> <diff_png>
#
# compare produced PNG to a reference file, using ImageMagick.
#
# Ref: ImageMagick Comparing:
#       <http://www.imagemagick.org/Usage/compare/>
#
# Recommended:
#       ImageMagick >= 6.4.0    (works crippled with IM 6.2.x)
#

OK_PNG=$1
PNG=$2
DIFF_PNG=$3

if [ -f /usr/bin/magick ]; then
    COMPARE="/usr/bin/magick compare"
    CONVERT="/usr/bin/magick"
else
    COMPARE=/usr/bin/convert
    CONVERT=/usr/bin/convert
fi

if [[ $CI == "" ]]; then
  COL_RED="$(tput setaf 1)"
  COL_GREEN="$(tput setaf 2)"
  COL_YELLOW="$(tput setaf 3)"
  COL_NORM="$(tput setaf 7)"
  COL_BOLD="$(tput bold)"
  COL_OFF="$(tput sgr0)"
fi

if [ \! -f $PNG ]; then
    echo "${COL_RED}*** FAILED:${COL_OFF} '${PNG}' not created"
    exit -1
fi

# Create a visual difference file
#
composite $OK_PNG $PNG -compose DIFFERENCE png:- | \
    $CONVERT - -contrast-stretch 0 $DIFF_PNG

# Get measurement of the difference
#
#   Metric can be:
#       AE (Absolute Error):    Number of pixels that were different, after applying fuzziness factor
#       PAE (Peak Absolute Error)
#       PSNR (Peak Signal/Noise Ratio): dB (1..inf) 1=all different, 20=differences 1/100 of maximum
#       MAE (Mean Absolute Error)
#       MSE (Mean Squared Error)
#       RMSE sqrt of MSE
#

# Note: '-metric AE' and '-fuzz n%' would be a good combo, but requires IM >= 6.4.3
#
#V="$($COMPARE 2>&1 -metric AE -fuzz 5% ${OK_PNG} ${PNG} ${DIFF_PNG})"

# Note: IM 6.4.x outputs just the PSNR number (i.e. 22.432) but 6.2.8 outputs
#	"22.432 dB\n300,300,PNG" which is... troublesome
#
#V="$($COMPARE 2>&1 -metric PSNR ${OK_PNG} ${PNG} ${DIFF_PNG} | head -1 | sed "-es/ dB//")"

# Note: IM 6.2.x seems to have trouble with opacity; gives many
#       "image opacity differs" errors; 6.4.x gives not.
#

#V=$(($COMPARE 2>&1 -metric PSNR ${OK_PNG} ${PNG} /dev/null | head -1 | sed "-es/ dB//") || exit 255)

# Cut non-decimal values (error string) out
#
# Note: Need to use 'bc' to handle non-integer comparisons. 'expr' would handle
#       decimals as string comparison, i.e. 'expr "7.1" \> 10' --> 1.
#
#echo "<<$V232321>>" | sed -es/[1-9.]//g
#echo "<<$V>>" | sed -es/[1-9.]//g
#
#if [ -n $(echo "$V" | sed -es/[1-9.]//g) ]; then
#    echo "${COL_RED}FAIL:${COL_OFF} $V"
#    exit 100

# HACK: A real hack. Did not get the above code to work.
#

# Look for the 'smartimgdiff_psnr' script in the same directory as this script.
# If it is not found, try to use 'smartimgdiff_psnr' in the PATH.
smartimgdiff_psnr=$(dirname $0)/smartimgdiff_psnr
if [ ! -x "$smartimgdiff_psnr" ]; then
    smartimgdiff_psnr=smartimgdiff_psnr
fi
result=$($smartimgdiff_psnr $OK_PNG $PNG 2>&1 | head -1)
V=$(echo $result | awk '/^PSNR:/ { print $2 }')
case "$V" in
    inf)
        echo "${COL_GREEN}OK:${COL_OFF}"
        exit 0
        ;;
    [0-9\.][0-9\.]*)
        if [ $(echo "$V >= 50" | bc) = 1 ]; then
            echo "${COL_GREEN}OK:${COL_OFF} PSNR >= 50dB ($V dB)"
            exit 0
        elif [ $(echo "$V >= 20" | bc) = 1 ]; then
            echo "${COL_YELLOW}WARNING:${COL_OFF} 20dB <= PSNR < 50dB ($V dB)"
            exit 0
        elif [ $(echo "$V >= 0" | bc) = 1 ]; then
            echo "${COL_RED}FAIL:${COL_OFF} PSNR < 20dB ($V dB)"
            exit 100
        fi
        ;;
    *)
        echo "${COL_RED}FAIL:${COL_OFF} $result"
        exit 100
        ;;
esac

#	$CONVERT -delay 50 results_ok/${PNG} results/${PNG} -loop 0 results_diff/$(PNG:.png=.anim.gif)

#	$COMPARE -metric AE -fuzz 50% results_ok/$(PNG) results/$(PNG) results_diff/$(PNG)

# This requires IM >= 6.4.2-8 (creates gray scale mask of the differences)
#
#	$COMPARE -metric AE -fuzz 5% results_ok/$(PNG) results/$(PNG) \
#	   -compose Src -highlight-color White -lowlight-color Black results_diff/$(PNG)

#	composite -compose DIFFERENCE results_ok/$(PNG) results/$(PNG) results_diff/$(PNG)
#	convert -threshold 25% -colorize 0/100/0 results_diff/$(PNG) results_diff/2_$(PNG)

#	$COMPARE -metric PSNR results_ok/$(PNG) results/$(PNG) results_diff/$(PNG)


